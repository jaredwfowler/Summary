
#ifndef SKYBOX_HPP
#define SKYBOX_HPP

/***************************************************************************************************
************************         |\/| o  _ ._ _  |  _   _   _.  _           ************************
************************         |  | | (_ | (_) | (/_ (_| (_| (_ \/        ************************
************************                                _|        /         ************************
************************                      Estd. 2015                    ************************
****************************************************************************************************
****************************************************************************************************
**** The use, disclosure, reproduction, modification, transfer, or transmittal of this work for ****
**** any purpose in any form or by any means without the written permission of Microlegacy is   ****
**** strictly prohibited.                                                                       ****
****                                                                                            ****
**** Confidential, Unpublished Property of Microlegacy.                                         ****
**** Use and Distribution Limited Solely to Authorized Personnel.                               ****
****                                                                                            ****
**** All Rights Reserved                                                                        ****
****************************************************************************************************
CREATOR ********************************************************************************************
****************************************************************************************************
****  Name:  Jared Fowler
**** Title:  Co-Founder of Microlegacy
****  Date:  March 14, 2017
**** Email:  jaredwfowler@hotmail.com
****************************************************************************************************
VERSION ********************************************************************************************
****************************************************************************************************
** Version #: 1.0
** Version Date: March 14, 2017
** Revision Personnel: JFowler,
****************************************************************************************************
ABOUT **********************************************************************************************
****************************************************************************************************

****************************************************************************************************
***************************************************************************************************/
//Dependencies======================================================================================
//==================================================================================================
#include "Object3D.hpp"

//Definition========================================================================================
//==================================================================================================
class SkyBox : public Object3D
{
public: //##########################################################################################
   //Vars,typedefs,etc.=============================================================================
   //===============================================================================================
   typedef struct
   {
      glm::mat4 modelMatrix;   // Fixed model matrix
      ID_GL textureID;         // ID of texture
   }
   SkyPlane;

   //Constructor(s)=================================================================================
   //===============================================================================================
   SkyBox(const char* _id,
      const char* _colorShaderID,
      float _planeLength,
      const char* _texPosY,
      const char* _texNegY,
      const char* _texPosX,
      const char* _texNegX,
      const char* _texPosZ,
      const char* _texNegZ);

   //Destructor=====================================================================================
   //===============================================================================================
   ~SkyBox(void);

   //Do=============================================================================================
   //===============================================================================================
   //-----------------------------------------------------------------------------------------------
   //Name:
   // draw
   //
   //Arguments:
   // void
   //
   //Output:
   // void
   //
   //Returns:
   // bool - true if draw success, else, false
   //
   //About:
   // Utilizes the current information (matrices, textures, etc.) and draws the model. Before
   // calling this function all updates to lights, matrices, etc, should be taken care of.This
   // draw method is special in that we want our final location to always be the center of this
   // object. We will not take into account the translation of the viewMatrix, only its rotations.
   //
   //-----------------------------------------------------------------------------------------------
   virtual bool draw(void);


private: //#########################################################################################
   //Vars,typedefs,etc.=============================================================================
   //===============================================================================================
   SkyPlane skyPlane[6];
   GLuint vao;
   GLuint vbo;
   GLuint vto;
   GLuint vno;
   GLuint veo;

   // There should only need be one instance of each object.

   void operator= (const SkyBox& m) {}
   SkyBox(const SkyBox& m);

};
//==================================================================================================
//End Definition====================================================================================

#endif
