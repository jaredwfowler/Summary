#ifndef VECTOR_CAMERA_HPP
#define VECTOR_CAMERA_HPP

/***************************************************************************************************
************************         |\/| o  _ ._ _  |  _   _   _.  _           ************************
************************         |  | | (_ | (_) | (/_ (_| (_| (_ \/        ************************
************************                                _|        /         ************************
************************                      Estd. 2015                    ************************
****************************************************************************************************
****************************************************************************************************
**** The use, disclosure, reproduction, modification, transfer, or transmittal of this work for ****
**** any purpose in any form or by any means without the written permission of Microlegacy is   ****
**** strictly prohibited.                                                                       ****
****                                                                                            ****
**** Confidential, Unpublished Property of Microlegacy.                                         ****
**** Use and Distribution Limited Solely to Authorized Personnel.                               ****
****                                                                                            ****
**** All Rights Reserved                                                                        ****
****************************************************************************************************
CREATOR ********************************************************************************************
****************************************************************************************************
****  Name:  Jared Fowler
**** Title:  Co-Founder of Microlegacy
****  Date:  March 14, 2017
**** Email:  jaredwfowler@hotmail.com
****************************************************************************************************
VERSION ********************************************************************************************
****************************************************************************************************
** Version #: 1.0
** Version Date: March 14, 2017
** Revision Personnel: JFowler,
****************************************************************************************************
ABOUT **********************************************************************************************
****************************************************************************************************
Vector Camera will follow a specified element based on a vector between that object and another
object. In other words, a straight line could be drawn between the camera and the two objects.
****************************************************************************************************
***************************************************************************************************/
//Dependencies======================================================================================
//==================================================================================================
#include "Camera.hpp"

//Definition========================================================================================
//==================================================================================================
class VectorCamera : public Camera
{
public: //##########################################################################################
   //Constructor(s)=================================================================================
   //===============================================================================================
   VectorCamera(const char* _id, float _distZ, float _distY, const char* _obj1, const char* _obj2);

   //Destructor=====================================================================================
   //===============================================================================================
   ~VectorCamera(void);

   //Gets===========================================================================================
   //===============================================================================================
   ID_GL getObjA(void);
   ID_GL getObjB(void);

   virtual glm::mat4 getViewMatrix(void);

   //Do=============================================================================================
   //===============================================================================================
   virtual bool update(void);

private: //#########################################################################################
   //Vars,typedefs,etc.=============================================================================
   //===============================================================================================
   float distZ;
   float distY;
   ID_GL objA;
   ID_GL objB;


   // There should only need be one instance of each object.

   void operator= (const VectorCamera& m) {}
   VectorCamera(const VectorCamera& m);

};
//==================================================================================================
//End Definition====================================================================================

#endif
