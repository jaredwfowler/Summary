
#ifndef OPTION_STOCK_HPP
#define OPTION_STOCK_HPP

/***************************************************************************************************
************************         |\/| o  _ ._ _  |  _   _   _.  _           ************************
************************         |  | | (_ | (_) | (/_ (_| (_| (_ \/        ************************
************************                                _|        /         ************************
************************                      Estd. 2015                    ************************
****************************************************************************************************
****************************************************************************************************
**** The use, disclosure, reproduction, modification, transfer, or transmittal of this work for ****
**** any purpose in any form or by any means without the written permission of Microlegacy is   ****
**** strictly prohibited.                                                                       ****
****                                                                                            ****
**** Confidential, Unpublished Property of Microlegacy.                                         ****
**** Use and Distribution Limited Solely to Authorized Personnel.                               ****
****                                                                                            ****
**** All Rights Reserved                                                                        ****
****************************************************************************************************
CREATOR ********************************************************************************************
****************************************************************************************************
****  Name:  Jared Fowler
**** Title:  Co-Founder of Microlegacy
****  Date:  December 7, 2015
**** Email:  jaredwfowler@hotmail.com
****************************************************************************************************
VERSION ********************************************************************************************
****************************************************************************************************
** Version #: 1.0
** Version Date: December 7, 2015
** Revision Personnel: JFowler,
****************************************************************************************************
ABOUT **********************************************************************************************
****************************************************************************************************
Derived from class Stock. OptionStock adds on stock option chain functionality.
****************************************************************************************************
***************************************************************************************************/
//Dependencies======================================================================================
//==================================================================================================
#include "Stock.hpp"
#include "StockOption.hpp"

//Definition========================================================================================
//==================================================================================================
class OptionStock : public Stock
{
public: //##########################################################################################
   //Constructor(s)=================================================================================
   //===============================================================================================
   OptionStock(std::string _ticker, std::string _name);

   //Destructor=====================================================================================
   //===============================================================================================
   virtual ~OptionStock(){}

   //Gets===========================================================================================
   //===============================================================================================
   inline std::vector<StockOption> getCalls(void) const { return this->calls; }
   inline std::vector<StockOption> getPuts(void) const { return this->puts; }

   //Do=============================================================================================
   //===============================================================================================
   bool clearCalls(void);
   bool clearPuts(void);
   bool addOptions(void);

   static std::vector<StockOption>* getThisWeeksOptions(std::string _ticker);
   static void optionsTableOutput(const FILE* _stream, const std::vector<StockOption>* _vec);
   static void optionsCSVOutput(const FILE* _stream, const std::vector<StockOption>* _vec);

protected: //#######################################################################################
   //Gets===========================================================================================
   //===============================================================================================
   inline const std::vector<StockOption>* getCallsPtr(void) const { return &(this->calls); }
   inline const std::vector<StockOption>* getPutsPtr(void) const { return &(this->puts); }

   //Do=============================================================================================
   //===============================================================================================
   bool insertCall(const StockOption* stk);
   bool insertPut(const StockOption* stk);
   void sortCalls(void);
   void sortPuts(void);

private: //#########################################################################################
   //Vars,typedefs,etc.=============================================================================
   //===============================================================================================
   std::vector<StockOption> calls;
   std::vector<StockOption> puts;

   //Do=============================================================================================
   //===============================================================================================
   static std::vector<StockOption>* getGoogleFinanceWeekOptions(std::string _ticker);
   static std::vector<StockOption>* getYahooFinanceWeekOptions(std::string _ticker);

};
//==================================================================================================
//End Definition====================================================================================

#endif